name: Build and run
run-name: Run application via docker compose
on: [push]
jobs:
  test-run:
    runs-on: ubuntu-latest
    needs: test-deploy
    timeout-minutes: ${{ fromJSON(vars.DEFAULT_JOB_TIMEOUT) }}
    steps:
      - uses: actions/checkout@v4
      - name: Build docker images
        run: docker compose -f docker-compose.ci.yml build
        shell: bash
      - name: Run application via docker compose
        run: |
          docker compose -f docker-compose.ci.yml up &
          COMPOSE_PID=$!
          sleep 20
          if kill -0 $COMPOSE_PID 2>/dev/null; then
            echo "Application has been running for 3 minutes, stopping now"
            docker compose down
            echo "::set-output name=app_running::false"
            exit 1
          fi
        shell: bash
        continue-on-error: true
      - name: Validate application run
        if: steps.run-application.outcome == 'failure'
        run: |
          app_running=$(echo "${{ steps.run-application.outputs.app_running }}" | tr '[:upper:]' '[:lower:]')
          if [ "$app_running" == "false" ]; then
            echo "Application was running for more than 3 minutes"
            exit 1
          fi
        shell: bash

  deploy:
    runs-on: ubuntu-latest
    needs: test-run
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: K0ras1K
          password: ${{ secrets.K0RAS1K_GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/k0ras1k/droptableusers-api:latest